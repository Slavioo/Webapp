using System;
using System.IO;
using System.Linq;
using System.Collections.Generic;
using iTextSharp.text.pdf;
using iTextSharp.text.pdf.parser;
using System.Text;
using CsvHelper;
using System.Globalization;

namespace PDFKeywordSearch
{
    class Program
    {
        static void Main(string[] args)
        {
            Console.WriteLine("Enter the keyword to search:");
            string keyword = Console.ReadLine();
            string pdfFolder = @"PDFs";
            string summaryFile = @"summary.csv";
            var summaries = new List<KeywordSummary>();

            foreach (string file in Directory.GetFiles(pdfFolder, "*.pdf"))
            {
                int count = CountKeywordOccurrences(file, keyword);
                summaries.Add(new KeywordSummary { PDFName = Path.GetFileName(file), KeywordOccurrence = count });
            }

            using (var writer = new StreamWriter(summaryFile))
            using (var csv = new CsvWriter(writer, CultureInfo.InvariantCulture))
            {
                csv.WriteRecords(summaries);
            }

            Console.WriteLine($"The summary has been saved to {summaryFile}");
        }

        static int CountKeywordOccurrences(string filePath, string keyword)
        {
            using (PdfReader reader = new PdfReader(filePath))
            {
                StringBuilder text = new StringBuilder();

                for (int i = 1; i <= reader.NumberOfPages; i++)
                {
                    text.Append(PdfTextExtractor.GetTextFromPage(reader, i));
                }

                return text.ToString().ToLower().Split(new[] { keyword.ToLower() }, StringSplitOptions.None).Length - 1;
            }
        }
    }

    public class KeywordSummary
    {
        public string PDFName { get; set; }
        public int KeywordOccurrence { get; set; }
    }
}
